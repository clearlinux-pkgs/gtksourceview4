commit cb76fca4f092c25f1e4f49abf0cc16beef87e056
Author: Leandro Dorileo <leandro.maciel.dorileo@intel.com>
Date:   Thu Dec 7 15:11:26 2017 -0800

    Fixes CVE-2017-14108

    The outputstream will keep trying to validate invalid utf8 buffers
    until it reachs 100% cpu usage. This patch makes sure mixed data +
    utf8 is detected and quickly moves the buffer.

    With that, if we're dealing with a mixed data + utf stream (though it's
    using utf8 encoding and we could not validate the current buffer as an
    utf8) consider it as a <CR> character and let the client validate the
    final stream and decide what to do with it.

    Signed-off-by: Leandro Dorileo <leandro.maciel.dorileo@intel.com>

diff --git a/gtksourceview/gtksourcebufferoutputstream.c b/gtksourceview/gtksourcebufferoutputstream.c
index 3853f42..da62a93 100644
--- a/gtksourceview/gtksourcebufferoutputstream.c
+++ b/gtksourceview/gtksourcebufferoutputstream.c
@@ -625,6 +625,24 @@ validate_and_insert (GtkSourceBufferOutputStream *stream,
 		valid = g_utf8_validate (buffer, len, &end);
 		nvalid = end - buffer;
 
+		/* Note: if we're dealing with a mixed data + utf stream (though it's using
+		   utf8 encoding and we could not validate the current buffer as an utf8)
+		   consider it as a <CR> character and let the client validate the
+		   final stream and decide what to do with it.
+		   This block fixes: CVE-2017-14108 */
+
+		if (!nvalid && !valid)
+		{
+			stream->priv->buffer = g_new (gchar, 2);
+			stream->priv->buffer[0] = '\r';
+			stream->priv->buffer[1] = '\0';
+			stream->priv->buflen = 1;
+
+			buffer++;
+			len--;
+			continue;
+		}
+
 		/* Note: this is a workaround for a 'bug' in GtkTextBuffer where
 		   inserting first a \r and then in a second insert, a \n,
 		   will result in two lines being added instead of a single
